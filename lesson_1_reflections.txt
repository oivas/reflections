How did viewing a diff between two versions of a file help you see the bug that was introduced?

It's quick and easy to compare as differences are shown as broken down sections

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Saves you time by having a history backed up for when system crashes or mistakenly deleted. Allows for 
comparisons maybe you prefered the older version?... 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

pros: if comits are chosen correctly to be saved, they will be good size and not clutter your history making it easier to find what you looking for later
cons: forgetting to save or not saving when changes are made leads to cluttered history when saved.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
When working on a project it can invole more than one file. Sometimes a change in a file will need changes to be made in other files within a project. 

How can you use the commands git log and git diff to view the history of files?

To view and load a previous instance of a project. And to compare changes made to a file with a file saved from an earlier time

How might using version control make you more confident to make changes that could break something?

You can always go back to a previous version. If something goes wrong you can compare new code to previous code and see whats the problem

Now that you have your workspace set up, what do you want to try using Git for?
I dont know... I still dont get Git and how to use it yet